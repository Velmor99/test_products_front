{"version":3,"sources":["components/productsList/listStyle.module.css","components/productsList/itemStyle.module.css","redux/productAction.js","redux/productOperation.js","components/productsList/Item.js","components/productsList/List.js","App.js","redux/productReducer.js","redux/store.js","index.js"],"names":["module","exports","actions","getProductsRequest","createAction","getProductsSuccess","getProductsError","getProducts","dispatch","getState","productAction","axios","get","then","response","data","products","catch","error","console","log","message","Item","sourceImage","itemName","cost","link","className","styles","photo","image","src","alt","information","name","price","href","List","this","props","getAllProducts","list","productsArr","map","item","listItem","img","asin","Component","connect","state","productOperation","App","reducer","createReducer","action","payload","store","configureStore","allProducts","ReactDOM","render","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,SAAW,8B,uCCA5DD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,YAAc,+BAA+B,KAAO,wBAAwB,MAAQ,2B,gJCWxHC,EANC,CACdC,mBALyBC,YAAa,kCAMtCC,mBALyBD,YAAa,kCAMtCE,iBALuBF,YAAa,iCCSvBG,EAVK,kBAAM,SAACC,EAAUC,GACnCD,EAASE,EAAcP,sBACvBQ,IACGC,IAAI,wDACJC,MAAK,SAACC,GACLN,EAASE,EAAcL,mBAAmBS,EAASC,KAAKC,cAEzDC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,EAAMG,c,gBCUzBC,MAjBf,YAAsD,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAC3C,OACE,qCACE,qBAAKC,UAAWC,IAAOC,MAAvB,SACE,qBAAKF,UAAWC,IAAOE,MAAOC,IAAKR,EAAaS,IAAKR,MAEvD,sBAAKG,UAAWC,IAAOK,YAAvB,UACE,mBAAGN,UAAWC,IAAOM,KAArB,SAA4BV,IAC5B,mBAAGG,UAAWC,IAAOO,MAArB,SAA6BV,IAC7B,mBAAGE,UAAWC,IAAOM,KAAME,KAAMV,EAAjC,4C,iBCNFW,E,kLAEFC,KAAKC,MAAMC,mB,+BAIX,OACE,oBAAIb,UAAWC,IAAOa,KAAtB,SACGH,KAAKC,MAAMG,YACVJ,KAAKC,MAAMG,YAAYC,KAAI,SAACC,GAC1B,OACE,oBAAIjB,UAAWC,IAAOiB,SAAtB,SACE,cAAC,EAAD,CACEtB,YAAaqB,EAAKE,IAClBrB,KAAMmB,EAAKT,MACXX,SAAUoB,EAAKV,KACfR,KAAMkB,EAAKlB,QALsBkB,EAAKG,SAW9C,4B,GAtBSC,aAqCJC,eAJS,SAACC,GAAD,MAAY,CAClCR,YAAaQ,EAAMlC,aALM,SAACR,GAAD,MAAe,CACxCgC,eAAgB,kBAAMhC,EAAS2C,SAOlBF,CAA6CZ,GCpC7Ce,MAJf,WACE,OAAO,cAAC,EAAD,K,gBCQMC,EAPEC,YAFI,KAES,eAC3B5C,EAAcL,oBAAqB,SAAC6C,EAAOK,GAAR,OAC5B,YAAOA,EAAOC,aCJXC,EAAQC,YAAe,CAClCL,QAAS,CACPrC,SAAU2C,KCEdC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.2949bcf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"listStyle_list__3dZQy\",\"listItem\":\"listStyle_listItem__3P-gT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"itemStyle_image__2jdTQ\",\"information\":\"itemStyle_information__16DTd\",\"name\":\"itemStyle_name__2c6aB\",\"price\":\"itemStyle_price__91mJC\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst getProductsRequest = createAction(\"products/getAllProductsRequest\");\r\nconst getProductsSuccess = createAction(\"products/getAllProductsSuccess\");\r\nconst getProductsError = createAction(\"products/getAllProductsError\");\r\n\r\nconst actions = {\r\n  getProductsRequest,\r\n  getProductsSuccess,\r\n  getProductsError,\r\n};\r\n\r\nexport default actions;\r\n","import axios from \"axios\";\r\nimport productAction from \"./productAction\";\r\n\r\nconst getProducts = () => (dispatch, getState) => {\r\n  dispatch(productAction.getProductsRequest());\r\n  axios\r\n    .get(\"https://products-back.herokuapp.com/api/products/all\")\r\n    .then((response) => {\r\n      dispatch(productAction.getProductsSuccess(response.data.products));\r\n    })\r\n    .catch((error) => console.log(error.message));\r\n};\r\n\r\nexport default getProducts;\r\n","import React from \"react\";\r\nimport styles from \"./itemStyle.module.css\";\r\n\r\nfunction Item({ sourceImage, itemName, cost, link }) {\r\n  return (\r\n    <>\r\n      <div className={styles.photo}>\r\n        <img className={styles.image} src={sourceImage} alt={itemName}></img>\r\n      </div>\r\n      <div className={styles.information}>\r\n        <p className={styles.name}>{itemName}</p>\r\n        <p className={styles.price}>{cost}</p>\r\n        <a className={styles.name} href={link}>\r\n          Click the link for more\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport productOperation from \"../../redux/productOperation\";\r\nimport Item from \"./Item\";\r\nimport styles from \"./listStyle.module.css\";\r\n\r\nclass List extends Component {\r\n  componentDidMount() {\r\n    this.props.getAllProducts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className={styles.list}>\r\n        {this.props.productsArr ? (\r\n          this.props.productsArr.map((item) => {\r\n            return (\r\n              <li className={styles.listItem} key={item.asin}>\r\n                <Item\r\n                  sourceImage={item.img}\r\n                  cost={item.price}\r\n                  itemName={item.name}\r\n                  link={item.link}\r\n                />\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAllProducts: () => dispatch(productOperation()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  productsArr: state.products,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import React from \"react\";\nimport List from \"./components/productsList/List\";\n\nfunction App() {\n  return <List></List>;\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport productAction from \"./productAction\";\r\n\r\nconst initialState = null;\r\n\r\nconst products = createReducer(initialState, {\r\n  [productAction.getProductsSuccess]: (state, action) =>\r\n    (state = [...action.payload]),\r\n});\r\n\r\nconst reducer = products;\r\n\r\nexport default reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport allProducts from \"./productReducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    products: allProducts,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./normalize.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}